---
version: '3'

volumes:
  data-postgres: {}
  data-opennms: {}
  data-opennms-cfg: {}

networks:
  opennms:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

services:
  database:
    image: ${DOCKER_REGISTRY:-docker.io}/postgres:${POSTGRES_VERSION:-13}
    container_name: database
    hostname: database
    environment:
      TZ: ${TIMEZONE:-America/New_York}
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - data-postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      opennms:
        ipv4_address: 172.16.238.10

  horizon:
    image: opennms/horizon:31.0.5
    container_name: horizon
    hostname: horizon
    sysctls:
      net.ipv4.ping_group_range: "0 429496729"
    depends_on:
      - database
    environment:
      TZ: ${TIMEZONE:-America/New_York}
    volumes:
      - data-opennms:/opennms-data
      - data-opennms-cfg:/opt/opennms/etc
      - ./container-fs/opt/opennms/deploy:/opt/opennms/deploy
      - ./container-fs/opt/opennms-overlay:/opt/opennms-overlay
      - ./container-fs/etc/conf.d/confd.toml:/etc/confd/confd.toml
    command: ["-s"]
    ports:
      - "8101:8101/tcp"
      - "8980:8980/tcp"
      - "10162:1162/udp"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 1m
      timeout: 5s
      retries: 3
    networks:
      opennms:
        ipv4_address: 172.16.238.11

  node1:
    image: ubuntu:latest
    container_name: node1
    restart: on-failure
    command: ["sleep","infinity"]
    networks:
      opennms:
        ipv4_address: 172.16.238.12

  node2:
    image: ubuntu:latest
    container_name: node2
    restart: on-failure
    command: ["sleep","infinity"]
    networks:
      opennms:
        ipv4_address: 172.16.238.13