---
# Default settings to let this playbook work without touching the group vars
onms_hzn_base_rest_url: http://localhost:8980/opennms/rest
onms_hzn_requisitions_api: requisitions
onms_hzn_node_api: nodes
onms_hzn_foreign_sources_api: foreignSources
onms_hzn_interfaces_api: interfaces
onms_hzn_user: admin
onms_hzn_password: admin

# Provisioning configuration for nodes

# Ansible hosts can provide the machine_id fact which is used for the foreignId.
# But nodes that don't allow Ansible connections, for example a switch, can't provide this fact.
# That is why we set here the inventory_hostname if the machine_id is not available. So it is guaranteed that we get a foreignId.
onms_host_foreignid: "{{ ansible_facts['machine_id'] if ansible_facts['machine_id'] is defined else inventory_hostname }}"
onms_host_nodelabel: "{{ ansible_facts['hostname'] if ansible_facts['hostname'] is defined else inventory_hostname }}"

# Creating dictionaries / lists here to make sure the combine works, even if host or group is not defined somewhere else.
# The group dictionaries should be used in `group_vars`,  for specific need on a node we can use the host dictionaries.
onms_group_metadata: {}
onms_host_metadata: {}
onms_node_metadata: "{{ onms_group_metadata | combine(onms_host_metadata) }}"

onms_group_service: {}
onms_host_service: {}
onms_node_services: "{{ onms_group_services | combine(onms_host_services) }}"

onms_host_assets: {}
onms_group_assets: {}
onms_node_assets: "{{ onms_group_assets | combine(onms_host_assets) }}"

onms_node_categories: "{{ (onms_group_categories | default([])) | union(onms_host_categories | default([]))  }}"

# Sets the node default location
onms_location: "Default"

# Dynamic naming of the requisition name. 'env' variable needs to be defined for a node/group
onms_requisition_name: "ansible-provisioning"
