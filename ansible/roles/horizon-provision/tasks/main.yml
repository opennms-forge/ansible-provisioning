---
- name: Check if requisition is existent
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}/{{ requisition }}"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: GET
    force_basic_auth: true
    status_code: 200
  ignore_errors: true
  no_log: true
  register: requisition_exists

- name: REST call Create Requisition
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: POST
    status_code: 202
    headers:
      Content-Type: "application/xml"
    body: "{{lookup('template','requisitions_xml.j2')}}"
  no_log: true
  register: requisitions_created
  when: requisition_exists.failed

- name: REST call Create foreignSource
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.foreignSourcesapi }}"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: POST
    status_code: 202
    headers:
      Content-Type: "application/xml"
    body: "{{lookup('template','foreignSources_xml.j2')}}"
#  no_log: true
  register: requisitions_created
  when: requisition_exists

- name: Check if node is existent
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}/{{  }}/{{ horizon.nodeapi }}/{{ ansible_facts['machine_id'] }}"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: GET
    force_basic_auth: true
    status_code: 200
  ignore_errors: true
  no_log: true
  register: node_exists
  when: requisitions_exists

- name: REST call Create Node
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}/{{ requisition }}/nodes"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: POST
    status_code: 202
    headers:
      Content-Type: "application/xml"
    body: "{{lookup('template','node_xml.j2')}}"
  no_log: false
  register: node_created
  when: node_exists 


- name: Check if service is existent
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}/{{ requisition }}/{{ horizon.nodeapi }}/{{ ansible_facts['machine_id'] }}/{{ horizon.interfacesapi }}/{{ ansible_host }}/services/{{ item }}"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: GET
    force_basic_auth: true
    status_code: 200
  ignore_errors: true
  no_log: true
  register: service_exists
  when: node_exists
  loop: "{{ services | list }}"

- name: REST call Create service
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}/{{ requisition }}/{{ horizon.nodeapi }}/{{ ansible_facts['machine_id'] }}/{{ horizon.interfacesapi }}/{{ ansible_host }}/services/"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: POST
    status_code: 202
    headers:
      Content-Type: "application/xml"
    body: "{{lookup('template','services_xml.j2')}}"
  no_log: true
  register: service_created
  when: service_exists.failed
  loop: "{{ services | list }}"

- name: Sync requisition
  ansible.builtin.uri:
    url: "{{ horizon.resturl }}/{{ horizon.requisitionsapi }}/{{ requisition }}/import?rescanExisting=true"
    user: "{{ horizon.user }}"
    password: "{{ horizon.password }}"
    method: PUT
    status_code: 202
    headers:
      Content-Type: "application/xml"
